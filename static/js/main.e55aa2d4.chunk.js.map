{"version":3,"sources":["style/theme.ts","components/DataProcessingUtill.ts","components/PairRanking.tsx","style/global.ts","components/graph/forceSimulation.ts","components/graph/Link.tsx","components/graph/Node.tsx","components/graph/Graph.tsx","components/Menu.tsx","components/App.tsx","serviceWorker.js","index.js"],"names":["makePxScaleUtil","base","scale","colors","main","accent","border","text","px","grid","font_size","max_width","result","id2member","Map","members","forEach","x","set","channel_id","getNameFromId","id","member","get","undefined","name","pairs","nijisanji_mentions","mentions","filter","origin_channel","has","mentions_group_map","key","localeCompare","target_channel","target_array","push","Array","from","values","length","map","amount","comment_num","getPairsFromResult","nodes","i","icon","channel_id2d3id","getD3idfromChannelId","d3id","links","source","source_channel_id","target","target_channel_id","num","filterLinksByDegree","max_degree","min_degree","links_map","pushLinkToMapsArray","link","array","omitted_links","Set","sort","a","b","slice","add","selected_links","YoutubeChannelLink","href","rel","Pair","rank","StyledPair","className","styled","tr","theme","StyledRankingRoot","div","PairRanking","pair_components","y","_","global_styles","css","mix","makeSigmoid","require","default","getInitializedForce","options","nums","sigmoid","center","stats","mean","deviation","stdev","deviation_output","force_simulation","d3","force","strength","distanceMax","distance","d","link_distance","iterations","window_size","width","height","graph","registerGraph","svg","on","call","selection","selectAll","classname","node","attr","StyledLineRoot","line","weight","mixColor","Link","data","useRef","useEffect","current","root","datum","ref","StyledNodeRoot","g","Node","root_element","alphaTarget","restart","fx","fy","xlinkHref","GraphRoot","Graph","useWindowSize","useMemo","link_nums","link_mean","link_stdev","graph_position","root_group","subject","style","transform","link_components","node_components","MenuRoot","Menu","ShadowRoot","App","styles","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e55aa2d4.chunk.js","sourcesContent":["export const makePxScaleUtil = (base: number) => (scale: number = 1): string =>\n  `${base * scale}px`;\n\nexport const colors = {\n  base: '#f0f0f0',\n  main: '#43dde6',\n  accent: '#fc5185',\n  border: '#ccc',\n  text: '#123',\n};\nexport const px = {\n  grid: makePxScaleUtil(20),\n  font_size: makePxScaleUtil(16),\n  max_width: makePxScaleUtil(900),\n};\n\nexport default { colors, px };\n","import { Member, Mention, ResultJSON } from '../types';\nimport result_json from '../scraping/TEMP_result.json';\nimport { NodeData, LinkData } from './graph/types';\n\nexport const result: ResultJSON = result_json;\nconst id2member: Map<string, Member> = new Map();\nresult.members.forEach((x) => id2member.set(x.channel_id, x));\nexport const getNameFromId = (id: string): string | undefined => {\n  const member = id2member.get(id);\n  if (member === undefined) return undefined;\n  return member.name;\n};\n\nexport const isNijisanjiChannelId = (id: string): boolean => id2member.has(id);\n\nexport const getPairsFromResult = (\n  result: ResultJSON\n): { mentions: Mention[]; amount: number }[] => {\n  const nijisanji_mentions = result.mentions.filter((x) =>\n    isNijisanjiChannelId(x.origin_channel)\n  );\n  const mentions_group_map: Map<string, Mention[]> = new Map();\n  nijisanji_mentions.forEach((x) => {\n    const key =\n      x.origin_channel.localeCompare(x.target_channel) > 0\n        ? `${x.origin_channel}${x.target_channel}`\n        : `${x.target_channel}${x.origin_channel}`;\n\n    const target_array = mentions_group_map.get(key);\n    if (target_array === undefined) {\n      mentions_group_map.set(key, [x]);\n    } else {\n      target_array.push(x);\n    }\n  });\n  const pairs = Array.from(mentions_group_map.values())\n    .filter((x) => x.length !== 0 && x.length <= 2)\n    .map((x) => {\n      const amount =\n        x.length === 1 ? x[0].comment_num : x[0].comment_num * x[1].comment_num;\n      //x.length === 1\n      //  ? x[0].comment_num\n      //  : x[0].comment_num > x[1].comment_num\n      //  ? x[1].comment_num\n      //  : x[0].comment_num;\n      return { mentions: x, amount };\n    });\n  return pairs;\n};\n\nexport const pairs = getPairsFromResult(result);\n\nconst getNodes = (): NodeData[] => {\n  const nodes: NodeData[] = result.members.map((x, i) => ({\n    id: i,\n    name: x.name,\n    channel_id: x.channel_id,\n    icon: x.icon,\n  }));\n  return nodes;\n};\n\nexport const nodes = getNodes();\n\nconst channel_id2d3id: Map<string, number> = new Map();\nnodes.forEach((x) => channel_id2d3id.set(x.channel_id, x.id));\nconst getD3idfromChannelId = (channel_id: string): number | undefined => {\n  const d3id = channel_id2d3id.get(channel_id);\n  if (d3id === undefined) return undefined;\n  return d3id;\n};\n\nconst getLinks = (): LinkData[] => {\n  const links: LinkData[] = pairs.map((x, i) => ({\n    id: i,\n    source: getD3idfromChannelId(x.mentions[0].origin_channel) as number,\n    source_channel_id: x.mentions[0].origin_channel,\n    target: getD3idfromChannelId(x.mentions[0].target_channel) as number,\n    target_channel_id: x.mentions[0].target_channel,\n    num: x.amount,\n  }));\n  return links;\n};\nexport const links = getLinks();\n\nexport const filterLinksByDegree = (\n  links: LinkData[],\n  max_degree: number,\n  min_degree: number\n) => {\n  const links_map: Map<number, LinkData[]> = new Map();\n\n  const pushLinkToMapsArray = (\n    link: LinkData,\n    map: typeof links_map,\n    key: number\n  ) => {\n    const array = map.get(key);\n    if (array !== undefined) array.push(link);\n    else map.set(key, [link]);\n  };\n  links.forEach((x) => {\n    pushLinkToMapsArray(x, links_map, x.source);\n    pushLinkToMapsArray(x, links_map, x.target);\n  });\n\n  const omitted_links: Set<LinkData> = new Set();\n  links_map.forEach((x) => {\n    const sorted_links = x.sort((a, b) => b.num - a.num);\n    sorted_links.slice(max_degree).forEach((x) => omitted_links.add(x));\n  });\n\n  const selected_links: Set<LinkData> = new Set();\n  links_map.forEach((x) => {\n    const sorted_links = x.sort((a, b) => b.num - a.num);\n    sorted_links.slice(0, min_degree).forEach((x) => selected_links.add(x));\n  });\n\n  return links.filter((x) => !omitted_links.has(x) || selected_links.has(x));\n};\n","import React, { FC } from 'react';\nimport { Member, Mention, ResultJSON } from '../types';\nimport result_json from '../scraping/TEMP_result.json';\nimport styled from '@emotion/styled';\nimport theme from '../style/theme';\nimport { getNameFromId, pairs } from './DataProcessingUtill';\n\nconst YoutubeChannelLink: FC<{ id: string; text?: string }> = ({\n  id,\n  text,\n}) => (\n  <a\n    href={`https://www.youtube.com/channel/${id}`}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    {text}\n  </a>\n);\n\nconst Pair: FC<{\n  rank: number;\n  mentions: [Mention, Mention];\n  amount: number;\n}> = ({ rank, mentions, amount }) => (\n  <StyledPair>\n    <td className=\"rank\">{rank + 1}</td>\n    <td className=\"pair\">\n      <span className=\"names\">\n        <YoutubeChannelLink\n          id={mentions[0].origin_channel}\n          text={getNameFromId(mentions[0].origin_channel)}\n        />\n        ×\n        <YoutubeChannelLink\n          id={mentions[0].target_channel}\n          text={getNameFromId(mentions[0].target_channel)}\n        />\n      </span>\n      ーmentions→: {mentions[0].comment_num}\n      <br />\n      ←mentionsー: {mentions[1].comment_num}\n    </td>\n    <td className=\"amount\">{amount}</td>\n  </StyledPair>\n);\n\nconst StyledPair = styled.tr`\n  border-bottom: 1px solid ${theme.colors.border};\n\n  .rank {\n    padding: ${theme.px.grid()};\n    text-align: center;\n  }\n  .pair {\n    padding: ${theme.px.grid()};\n\n    .names {\n      display: block;\n      font-size: ${theme.px.font_size(1.5)};\n    }\n  }\n  .amount {\n    padding: ${theme.px.grid()};\n    text-align: right;\n  }\n`;\n\nconst PairRanking: FC<{}> = () => {\n  const pair_components = pairs\n    .sort((x, y) => y.amount - x.amount)\n    .filter((_, i) => i < 100)\n    .map((x, i) => (\n      <Pair\n        rank={i}\n        mentions={x.mentions as [Mention, Mention]}\n        amount={x.amount}\n        key={x.mentions[0].origin_channel + x.mentions[0].target_channel}\n      />\n    ));\n\n  return (\n    <StyledRankingRoot>\n      <h2>ペアランキング</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>pair</th>\n            <th>amount</th>\n          </tr>\n        </thead>\n        <tbody>{pair_components}</tbody>\n      </table>\n    </StyledRankingRoot>\n  );\n};\n\nconst StyledRankingRoot = styled.div`\n  margin: 0 auto;\n  padding-top: ${theme.px.grid()};\n  max-width: ${theme.px.max_width()};\n  table {\n    margin: ${theme.px.grid()} auto 0;\n    border-collapse: collapse;\n\n    thead {\n      tr {\n        border-bottom: 3px solid ${theme.colors.border};\n        th {\n          padding: ${theme.px.grid()};\n        }\n      }\n    }\n  }\n`;\n\nexport default PairRanking;\n","import { css } from '@emotion/core';\nimport theme from './theme';\nimport mix from 'mix-color';\n\nexport const global_styles = css`\n  body {\n    color: ${theme.colors.text};\n    font-size: ${theme.px.font_size()};\n    font-family: 游ゴシック体, 'Yu Gothic', YuGothic, 'ヒラギノ角ゴシック Pro',\n      'Hiragino Kaku Gothic Pro', メイリオ, Meiryo, Osaka, 'ＭＳ Ｐゴシック',\n      'MS PGothic', sans-serif;\n    background: ${theme.colors.base};\n    a {\n      color: ${theme.colors.accent};\n\n      &:visited {\n        color: ${mix(theme.colors.accent, '#000', 0.4)};\n      }\n    }\n  }\n`;\n\nexport default global_styles;\n","//this code from https://github.com/sititou70/yurigraph/blob/master/src/components/graph/forceSimulation.ts\nimport * as d3 from 'd3';\nimport { SimulationNodeDatum } from 'd3';\nimport { NodeData, LinkData, ForceSimulation, ElementSelection } from './types';\nimport stats from 'stats-lite';\nconst makeSigmoid = require('awesome-sigmoid').default;\n\nexport const getInitializedForce = (\n  nodes: NodeData[],\n  links: LinkData[],\n  options: {\n    classname: { node: string; link: string };\n    window_size: { width: number; height: number };\n    link_distance: number;\n  }\n): {\n  force_simulation: ForceSimulation;\n  registerGraph: (svg: Element) => void;\n} => {\n  const nums = links.map((x) => x.num);\n  const sigmoid = makeSigmoid({\n    center: stats.mean(nums),\n    deviation: stats.stdev(nums),\n    deviation_output: 0.9,\n  });\n\n  const force_simulation = d3\n    .forceSimulation(nodes as SimulationNodeDatum[])\n    .force('charge', d3.forceManyBody().strength(-200).distanceMax(200))\n    .force(\n      'link',\n      d3\n        .forceLink(links)\n        .distance((d) => options.link_distance * (2 - sigmoid(d.num)))\n        .strength(nodes.length / links.length)\n        .iterations(10)\n    )\n    .force(\n      'center',\n      d3\n        .forceCenter()\n        .x(options.window_size.width / 2)\n        .y(options.window_size.height / 2)\n    )\n    .force('collide', d3.forceCollide(10));\n\n  let graph: ElementSelection | null = null;\n  const registerGraph = (svg: Element) => {\n    graph = d3.select(svg);\n    force_simulation.on('tick', () => {\n      if (graph === null) return;\n\n      graph.call((selection) => {\n        selection.selectAll('.' + options.classname.node).call((selection) =>\n          selection.attr('transform', (d: any) => {\n            return d !== undefined && 'translate(' + d.x + ',' + d.y + ')';\n          })\n        );\n        selection.selectAll('.' + options.classname.link).call((selection) =>\n          selection\n            .attr('x1', (d: any) => (d !== undefined ? d.source.x : 0))\n            .attr('y1', (d: any) => (d !== undefined ? d.source.y : 0))\n            .attr('x2', (d: any) => (d !== undefined ? d.target.x : 0))\n            .attr('y2', (d: any) => (d !== undefined ? d.target.y : 0))\n        );\n      });\n    });\n  };\n\n  return { force_simulation, registerGraph };\n};\n\nexport default getInitializedForce;\n","import React, { FC, useRef, useEffect } from 'react';\nimport { LinkData } from './types';\nimport * as d3 from 'd3';\nimport styled from '@emotion/styled';\nimport theme from '../../style/theme';\nimport mixColor from 'mix-color';\n\nexport const Link: FC<{ data: LinkData; weight: number }> = ({\n  data,\n  weight,\n}) => {\n  const line = useRef(null);\n  useEffect(() => {\n    if (line.current === null) return;\n    const root = d3.select(line.current);\n    root.datum(data);\n    return () => {\n      root.datum();\n    };\n  });\n  return (\n    <StyledLineRoot\n      className=\"link\"\n      ref={line}\n      weight={weight}\n    ></StyledLineRoot>\n  );\n};\n\nconst StyledLineRoot = styled.line<{ weight: number }>`\n  stroke: ${({ weight }) =>\n    mixColor(theme.colors.main, theme.colors.accent, weight)};\n  stroke-width: ${({ weight }) => weight * 7 + 2};\n  opacity: 1;\n`;\n\nexport default Link;\n","import React, { FC, useRef, useEffect } from 'react';\nimport { NodeData, ForceSimulation } from './types';\nimport styled from '@emotion/styled';\nimport * as d3 from 'd3';\nimport theme from '../../style/theme';\n\nexport const Node: FC<{\n  data: NodeData;\n  force_simulation: ForceSimulation;\n}> = ({ data, force_simulation }) => {\n  const root_element = useRef<SVGCircleElement | null>(null);\n  useEffect(() => {\n    if (root_element.current === null) return;\n    const root = d3.select(root_element.current);\n\n    root.datum(data);\n\n    return () => {\n      root.datum();\n    };\n  });\n\n  //drag event\n  useEffect(() => {\n    if (root_element.current === null) return;\n    d3.select(root_element.current as Element).call(\n      d3\n        .drag()\n        .on('start', (d: any) => {\n          force_simulation.alphaTarget(0.1).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        })\n        .on('drag', (d: any) => {\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n        })\n        .on('end', (d: any) => {\n          d.fx = null;\n          d.fy = null;\n        })\n    );\n  });\n\n  return (\n    <StyledNodeRoot className=\"node\" ref={root_element}>\n      <text x={theme.px.grid()} y={theme.px.font_size(0.5)}>\n        {data.name}\n      </text>\n      <image\n        x={theme.px.grid(-1)}\n        y={theme.px.grid(-1)}\n        xlinkHref={`data:image/png;base64,${data.icon}`}\n      />\n    </StyledNodeRoot>\n  );\n};\n\nconst StyledNodeRoot = styled.g`\n  cursor: pointer;\n\n  text {\n    fill: #999;\n    text-shadow: 0 0 1px #fff, 0 0 3px #fff, 0px 0px 5px #fff;\n  }\n\n  image {\n    width: ${theme.px.grid(2)};\n    border-radius: 50%;\n  }\n`;\n\nexport default Node;\n","import React, { FC, useRef, useEffect, useMemo } from 'react';\nimport { NodeData, LinkData } from './types';\nimport getInitializedForce from './forceSimulation';\nimport { useWindowSize } from '@react-hook/window-size';\nimport styled from '@emotion/styled';\nimport Link from './Link';\nimport Node from './Node';\nimport * as d3 from 'd3';\nimport { mean, stdev } from 'stats-lite';\nimport { makeSigmoid } from 'awesome-sigmoid';\nimport mixColor from 'mix-color';\nimport theme from '../../style/theme';\n\nexport const Graph: FC<{ nodes: NodeData[]; links: LinkData[] }> = ({\n  nodes,\n  links,\n}) => {\n  const [width, height] = useWindowSize();\n  const force = useMemo(\n    () =>\n      getInitializedForce(nodes, links, {\n        classname: { node: 'node', link: 'link' },\n        window_size: { width, height },\n        link_distance: 100,\n      }),\n    [width, height, nodes, links]\n  );\n  const svg = useRef<SVGSVGElement | null>(null);\n  useEffect(() => {\n    if (svg.current === null) return;\n    force.registerGraph(svg.current);\n  });\n\n  const link_nums = links.map((x) => x.num);\n  const link_mean = mean(link_nums);\n  const link_stdev = stdev(link_nums);\n  const sigmoid = makeSigmoid({\n    center: link_mean,\n    deviation: link_stdev,\n    deviation_output: 0.9,\n  });\n\n  //move and zoom handler\n  const graph_position = useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n  const root_group = useRef<SVGGElement | null>(null);\n  useEffect(() => {\n    if (svg.current === null) return;\n    d3.select(svg.current as Element).call(\n      d3\n        .drag()\n        .subject(() => {\n          if (root_group.current === null) return;\n          return { x: graph_position.current.x, y: graph_position.current.y };\n        })\n        .on('drag', (_: any) => {\n          if (root_group.current === null) return;\n          root_group.current.style.transform = `translate(${d3.event.x}px, ${d3.event.y}px)`;\n          graph_position.current = { x: d3.event.x, y: d3.event.y };\n        })\n    );\n  }, []);\n\n  //components\n  const link_components = links.map((x) => (\n    <Link data={x} key={x.id} weight={sigmoid(x.num)} />\n  ));\n  const node_components = nodes.map((x) => (\n    <Node data={x} force_simulation={force.force_simulation} key={x.id} />\n  ));\n\n  return (\n    <GraphRoot ref={svg}>\n      <g ref={root_group}>\n        {link_components}\n        {node_components}\n      </g>\n    </GraphRoot>\n  );\n};\n\nconst GraphRoot = styled.svg`\n  display: block;\n  width: 100%;\n  height: 100vh;\n  background: linear-gradient(\n    0.1turn,\n    ${mixColor('#fff', theme.colors.accent, 0.1)} 30%,\n    ${mixColor('#fff', theme.colors.main, 0.1)}\n  );\n  cursor: move;\n\n  * {\n    transition: fill ease 0.5s, opacity ease 0.5s;\n  }\n`;\n\nexport default Graph;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport theme from '../style/theme';\n\nexport const Menu = () => (\n  <MenuRoot>\n    <h1>NIJISANJI-MESH</h1>\n    <div>\n      <a\n        href=\"https://github.com/OoyamaYoshito/nijisanji_mesh\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        ソースコード\n      </a>\n    </div>\n  </MenuRoot>\n);\n\nconst MenuRoot = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: ${theme.px.grid(0.5)};\n  background: rgba(255, 255, 255, 0.7);\n\n  h1 {\n    font-size: ${theme.px.font_size(0.8)};\n    margin-left: ${theme.px.grid(0.5)};\n  }\n\n  div {\n    a {\n      font-size: ${theme.px.font_size(0.7)};\n      margin-left: ${theme.px.grid(0.5)};\n    }\n  }\n`;\n\nexport default Menu;\n","import React, { FC } from 'react';\nimport PairRanking from './PairRanking';\nimport { Global } from '@emotion/core';\nimport global_styles from '../style/global';\nimport Graph from './graph/Graph';\nimport styled from '@emotion/styled';\nimport { nodes, links, filterLinksByDegree } from './DataProcessingUtill';\nimport theme from '../style/theme';\nimport Menu from './Menu';\n\nconst App: FC<{}> = () => (\n  <div className=\"App\">\n    <Global styles={global_styles} />\n    <Graph nodes={nodes} links={filterLinksByDegree(links, 3, 1)} />\n    <ShadowRoot>\n      <PairRanking />\n    </ShadowRoot>\n    <Menu />\n  </div>\n);\n\nconst ShadowRoot = styled.div`\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}